import{d as m,f as g,c as o,n as p,a as y,t as c,b as d,e as h,o as r,j as _,k as v,h as b,F as T,r as C,T as q,l as B}from"./index-BKzxTDxB.js";const V={key:0,class:"input-required"},k=["data-testid","value","placeholder","disabled","readonly","type"],S={key:2,class:"error-text"},A=m({__name:"PasswordInput",props:{modelValue:{},error:{type:[String,Boolean]},label:{},placeholder:{},disabled:{type:Boolean},readOnly:{type:Boolean},required:{type:Boolean},autoComplete:{type:Boolean},classList:{},containerClass:{},labelClass:{},dataTestId:{}},emits:["update:modelValue"],setup(s,{emit:l}){const n=l,i=g(!1),e=()=>i.value=!i.value,t=a=>{const u=a.target;n("update:modelValue",u.value)};return(a,u)=>(r(),o("div",{class:p(["input-container",a.containerClass])},[a.label?(r(),o("label",{key:0,class:p(["input-label",a.labelClass])},[y(c(a.label)+" ",1),a.required?(r(),o("span",V,"*")):d("",!0)],2)):d("",!0),h("input",{"data-testid":a.dataTestId,class:p(["input-form",[a.classList,{error:!!a.error,disabled:a.disabled}]]),autoComplete:"on",value:a.modelValue,placeholder:a.placeholder,disabled:a.disabled,readonly:a.readOnly,type:i.value?"text":"password",onInput:t},null,42,k),a.modelValue?(r(),o("div",{key:1,class:"input-icon",onClick:e}," show ")):d("",!0),a.error?(r(),o("span",S,c(a.error),1)):d("",!0)],2))}}),I=2e3,w=(s,l)=>({text:s,status:l,id:Math.random()*1e3}),$=_("toaster-store",{state:()=>({toasts:[]}),actions:{updateState(s,l){const{text:n,timeout:i}=s,e=w(n,l);this.toasts.push(e),setTimeout(()=>{this.toasts=this.toasts.filter(t=>t.id!==e.id)},i??I)},success(s){this.updateState(s,"success")},warning(s){this.updateState(s,"warning")},error(s){this.updateState(s,"error")}}}),N={key:0,class:"toaster__wrapper"},O={class:"toaster__list-text"},R=m({__name:"ToastNotification",setup(s){const l={warning:"warning",error:"error",success:"success"},n=$();return(i,e)=>(r(),v(q,{to:"body"},[b(n).toasts.length?(r(),o("ul",N,[(r(!0),o(T,null,C(b(n).toasts,t=>(r(),o("li",{class:p(["toaster__inner",l[t.status]]),key:t.text},[h("span",O,c(t.text),1)],2))),128))])):d("",!0)]))}}),F=B(R,[["__scopeId","data-v-fab1b441"]]),L={key:0,class:"input-required"},E=["data-testid","value","placeholder","disabled","readonly"],j={key:1,class:"error-text"},M=m({__name:"TextInput",props:{modelValue:{},error:{type:[String,Boolean]},label:{},placeholder:{},disabled:{type:Boolean},readOnly:{type:Boolean},required:{type:Boolean},autoComplete:{type:Boolean},classList:{},containerClass:{},labelClass:{},dataTestId:{}},emits:["update:modelValue"],setup(s,{emit:l}){const n=l,i=e=>{const t=e.target;n("update:modelValue",t.value)};return(e,t)=>(r(),o("div",{class:p(["input-container",e.containerClass])},[e.label?(r(),o("label",{key:0,class:p(["input-label",e.labelClass])},[y(c(e.label)+" ",1),e.required?(r(),o("span",L,"*")):d("",!0)],2)):d("",!0),h("input",{class:p(["input-form",[e.classList,{error:!!e.error,disabled:e.disabled}]]),type:"text","data-testid":e.dataTestId,value:e.modelValue,placeholder:e.placeholder,onInput:i,disabled:e.disabled,readonly:e.readOnly},null,42,E),e.error?(r(),o("span",j,c(e.error),1)):d("",!0)],2))}}),Z=()=>({validate:(e,t)=>{const a={};return Object.entries(e).forEach(([u,f])=>{t[u]&&(t[u].regex.test(f)||(a[u]=t[u].error))}),Object.keys(a).length>0?{validated:!1,errors:a}:{validated:!0,errors:a}},isRequiredEmail:()=>({regex:/^[^\s@]+@[a-zA-Z\d.-]+\.[a-zA-Z]{2,}$/,error:"Please enter a valid email."}),isRequiredNumber:()=>({regex:/^-?\d+(\.\d+)?$/,error:"This field is required."}),isRequiredString:()=>({regex:/^[^\s]+$/,error:"This field is required."})});export{F as T,M as _,A as a,Z as b,$ as u};
